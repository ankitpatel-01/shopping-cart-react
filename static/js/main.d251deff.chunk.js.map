{"version":3,"sources":["mics/Cart.js","images/cart.svg","components/NavBar.js","components/Products.js","pages/Category.js","pages/Checkout.js","pages/P404.js","pages/Home.js","App.js","index.js"],"names":["cartReducer","state","action","type","some","item","id","map","quantity","concat","price","filter","CartContext","createContext","DispatchCartContext","LS_KEY","CartProvider","children","useReducer","initialValue","persistedValue","localStorage","getItem","JSON","parse","cart","dispatchCart","useEffect","setItem","stringify","Provider","value","useCartDispatch","useContext","useCart","NavBar","cartItemsTotal","reduce","total","cartPriceTotal","to","className","src","img","alt","height","width","memo","Products","products","addToCart","useCallback","inStock","length","p","thumbnail","name","delivery","disabled","onClick","Category","useParams","myProducts","categoryId","useState","currentProduct","setcurrentProduct","category","categories","find","c","style","textAlign","description","onChange","e","target","checked","result","Checkout","checkoutItems","cartItems","product","getComputedCheckoutItems","handleAdd","handleRemoveOne","handleRemove","myitems","objectFit","P404","Home","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d251deff.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useReducer } from 'react';\r\n\r\nfunction cartReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'RESET':\r\n            return [];\r\n\r\n        case 'ADD_ONE': {\r\n            const isInCart = state.some(item => item.id === action.id);\r\n\r\n            return isInCart\r\n                ? state.map(item =>\r\n                    item.id === action.id\r\n                        ? { ...item, quantity: item.quantity + 1 }\r\n                        : item\r\n                )\r\n                : state.concat({ id: action.id, quantity: 1, price: action.price });\r\n        }\r\n\r\n        case 'REMOVE_ONE': {\r\n            const isInCart = state.some(item => item.id === action.id);\r\n\r\n            return isInCart\r\n                ? state.map(item =>\r\n                    item.id === action.id\r\n                        ? {\r\n                            ...item,\r\n                            quantity:\r\n                                item.quantity > 1 ? item.quantity - 1 : item.quantity,\r\n                        }\r\n                        : item\r\n                )\r\n                : state;\r\n        }\r\n\r\n        case 'REMOVE': {\r\n            return state.filter(item => item.id !== action.id);\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst CartContext = createContext();\r\nconst DispatchCartContext = createContext();\r\n\r\nconst LS_KEY = 'shopping_cart';\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [cart, dispatchCart] = useReducer(cartReducer, [], initialValue => {\r\n        const persistedValue = localStorage.getItem(LS_KEY);\r\n        return persistedValue ? JSON.parse(persistedValue) : initialValue;\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LS_KEY, JSON.stringify(cart));\r\n    }, [cart]);\r\n\r\n    return (\r\n        <DispatchCartContext.Provider value={dispatchCart}>\r\n            <CartContext.Provider value={cart}>{children}</CartContext.Provider>\r\n        </DispatchCartContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useCartDispatch = () => useContext(DispatchCartContext);\r\nexport const useCart = () => useContext(CartContext);","export default __webpack_public_path__ + \"static/media/cart.e1cc5d23.svg\";","import React, { memo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport img from '../images/cart.svg'\r\nimport { useCart } from '../mics/Cart';\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    const cart = useCart();\r\n    const cartItemsTotal = cart.reduce((total, item) => total + item.quantity, 0);\r\n    const cartPriceTotal = cart.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <Link to={'/'} className=\"home\">Home</Link>\r\n                <nav>\r\n                    <ul className=\"navLinks\">\r\n                        <li>\r\n                            <Link to={'/checkout'}>\r\n                                <img src={img} alt=\"cart\" height=\"30\" width=\"30\" />\r\n                                <p className=\"dot\">{cartItemsTotal}</p>\r\n                                <p>${cartPriceTotal}</p>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(NavBar)\r\n","import React, { useCallback } from 'react'\r\nimport { useCartDispatch } from '../mics/Cart';\r\n\r\n\r\nconst Products = ({ products }) => {\r\n\r\n    const dispatchCart = useCartDispatch();\r\n\r\n    const addToCart = useCallback(\r\n        (id, price, inStock) => {\r\n            if (!inStock) {\r\n                return;\r\n            }\r\n            dispatchCart({ type: 'ADD_ONE', id, price });\r\n        },\r\n        [dispatchCart],\r\n    )\r\n\r\n    if (products.length === 0) {\r\n        return (\r\n            <div>\r\n                No Product is available ☹\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"Product-grid\">\r\n            {products.map(p => (\r\n                <div className=\"Product-card\" key={p.id}>\r\n                    <img src={p.thumbnail} alt=\"img\" />\r\n                    <h1>{p.name}</h1>\r\n                    <p className=\"Product-price\">${p.price}</p>\r\n                    {p.delivery && <p>Delivery available</p>}\r\n                    <p className={p.inStock ? 'text-success' : 'text-danger'}>\r\n                        {p.inStock ? 'In stock' : 'Out of stock'}\r\n                    </p>\r\n                    <p><button disabled={!p.inStock} onClick={() => addToCart(p.id, p.price, p.inStock)}>Add to Cart</button></p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Products\r\n","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport categories from '../database/categories.json'\r\nimport myProducts from '../database/products.json';\r\nimport Products from '../components/Products'\r\n\r\nconst Category = () => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const products = myProducts.filter(p => p.categoryId === id);\r\n\r\n    const [currentProduct, setcurrentProduct] = useState(products)\r\n\r\n    const category = categories.find(c => c.id === id);\r\n\r\n    if (!category) {\r\n        return <div>Category with id {id} does not exist</div>;\r\n    }\r\n\r\n    const handleCheck = (e) => {\r\n        if (e.target.checked && e.target.name === 'delivery') {\r\n            const result = myProducts.filter(p => p.categoryId === id && p.delivery);\r\n            setcurrentProduct(result);\r\n        }\r\n        if (!e.target.checked && e.target.name === 'delivery') {\r\n            const result = myProducts.filter(p => p.categoryId === id);\r\n            setcurrentProduct(result);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 style={{ textAlign: 'center' }}>{category.name}</h2>\r\n            <p style={{ textAlign: 'center' }}>{category.description}</p>\r\n            <div className=\"category-main\">\r\n                <div className=\"filter-box\">\r\n                    <h2>Filter</h2>\r\n                    <div><input onChange={handleCheck} type=\"checkbox\" name=\"delivery\" /> Delivery</div>\r\n                </div>\r\n                <Products products={currentProduct} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Category\r\n","import React, { useCallback, useState } from 'react'\r\nimport { useCart, useCartDispatch } from '../mics/Cart';\r\nimport myProducts from '../database/products.json';\r\n\r\n\r\nfunction getComputedCheckoutItems(products, cartItems) {\r\n\r\n    const productsInCart = products.filter(p =>\r\n        cartItems.some(item => item.id === p.id)\r\n    );\r\n\r\n    return productsInCart.map(product => {\r\n        return {\r\n            ...product,\r\n            quantity: cartItems.find(item => item.id === product.id).quantity,\r\n        };\r\n    });\r\n}\r\n\r\nconst Checkout = () => {\r\n\r\n\r\n    const cart = useCart();\r\n    const dispatchCart = useCartDispatch();\r\n    const [products] = useState(myProducts);\r\n\r\n    const checkoutItems = getComputedCheckoutItems(products, cart);\r\n\r\n    const cartPriceTotal = checkoutItems.reduce(\r\n        (total, item) => total + item.price * item.quantity,\r\n        0\r\n    );\r\n\r\n    const handleAdd = useCallback(\r\n        id => {\r\n            dispatchCart({ type: 'ADD_ONE', id });\r\n        },\r\n        [dispatchCart]\r\n    );\r\n\r\n    const handleRemoveOne = useCallback(\r\n        id => {\r\n            dispatchCart({ type: 'REMOVE_ONE', id });\r\n        },\r\n        [dispatchCart]\r\n    );\r\n\r\n    const handleRemove = useCallback(\r\n        id => {\r\n            dispatchCart({ type: 'REMOVE', id });\r\n        },\r\n        [dispatchCart]\r\n    );\r\n\r\n    const cartItemsTotal = cart.reduce((total, item) => total + item.quantity, 0);\r\n\r\n    if (cartItemsTotal === 0) {\r\n        return (\r\n            <div className=\"emptyCart\">\r\n                Your Cart Is Empty!\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Checkout</h1>\r\n            <div className=\"checkout\">\r\n                <table>\r\n                    <thead className=\"thead\">\r\n                        <tr>\r\n                            <th> </th>\r\n                            <th>Name</th>\r\n                            <th>Price</th>\r\n                            <th>Quantity</th>\r\n                            <th> </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {checkoutItems.map(myitems => (\r\n                            <tr key={myitems.id} className=\"tdata\">\r\n                                <td>\r\n                                    <img\r\n                                        src={myitems.thumbnail}\r\n                                        alt={myitems.name}\r\n                                        style={{ width: 80, height: 80, objectFit: \"scale-down\" }}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    {myitems.name}\r\n                                </td>\r\n                                <td>${myitems.price}</td>\r\n                                <td>\r\n                                    <div>\r\n                                        <button className=\"cartbtn\" onClick={() => handleRemoveOne(myitems.id)}>-</button>\r\n                                        <input className=\"quantity\" disabled value={myitems.quantity} />\r\n                                        <button className=\"cartbtn\" onClick={() => handleAdd(myitems.id)}>+</button>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <button className=\"dot\" onClick={() => handleRemove(myitems.id)}>\r\n                                        X\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n            <hr />\r\n            <div>\r\n                <div className=\"totalPrice\">Total ${cartPriceTotal}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst P404 = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <h1>404</h1>\r\n                <h2>Page Not Found</h2>\r\n                <p>The Page you are looking for doesn't exist or an other error occured. Go to <Link to={\"/\"}>Home Page.</Link></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default P404\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport categories from '../database/categories.json'\r\nconst Home = () => {\r\n    return (\r\n        <div className=\"cate-container\">\r\n            {categories.map(c => (\r\n                <Link key={c.id} to={`/category/${c.id}`} className=\"cate-items\">\r\n                    <div className=\"cate-card\">\r\n                        <h1>{c.name}</h1>\r\n                        <div>{c.description}</div>\r\n                    </div>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Route, Switch } from 'react-router';\nimport './App.css';\nimport { CartProvider } from './mics/Cart'\nimport NavBar from './components/NavBar';\nimport Category from './pages/Category';\nimport Checkout from './pages/Checkout';\nimport P404 from './pages/P404';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <CartProvider>\n      <div className=\"App\">\n        <NavBar />\n        <hr />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/category/:id\" exact>\n            <Category />\n          </Route>\n          <Route path=\"/checkout\" exact>\n            <Checkout />\n          </Route>\n          <Route>\n            <P404 />\n          </Route>\n        </Switch>\n      </div>\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter>\n  <App />\n</BrowserRouter>,\n  document.getElementById('root'));\n"],"sourceRoot":""}